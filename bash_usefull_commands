# Mount a SMB share using cifs
sudo mount -t cifs -o username=serverUserName //myServerIpAdress/sharename /mnt/myFolder/
sudo mount -t cifs -o username=hai,password= //192.168.174.1/bash /mnt/scripts

# Scan for new SCSI devices by writing "- - -" to the scan file of each SCSI host
for host in /sys/class/scsi_host/host*; do echo "- - -" | sudo tee $host/scan; done

# This loop continuously checks for TCP connections in the SYN_SENT state every 2 seconds using netstat.
while true;do sleep 2s && netstat -napotep|grep SYN_SENT; done

 #Print the fifth column (a.k.a. field) in a space-separated file:
   awk '{print $5}' {{path/to/file}}

 # Print the second column of the lines containing "foo" in a space-separated file:
   awk '/{{foo}}/ {print $2}' {{path/to/file}}

 # Print the last column of each line in a file, using a comma (instead of space) as a field separator:
   awk -F ',' '{print $NF}' {{path/to/file}}

 # Sum the values in the first column of a file and print the total:
   awk '{s+=$1} END {print s}' {{path/to/file}}

 # Print every third line starting from the first line:
   awk 'NR%3==1' {{path/to/file}}

 # Print different values based on conditions:
   awk '{if ($1 == "foo") print "Exact match foo"; else if ($1 ~ "bar") print "Partial match bar"; else print "Baz"}' {{path/to/file}}

 # Print all lines where the 10th column value equals the specified value:
   awk '($10 == {{value}})'

 # Print all the lines which the 10th column value is between a min and a max:
   awk '($10 >= {{min_value}} && $10 <= {{max_value}})'



# RHEL 9 specific commands

# Connect to Red Hat Connect with specified username and password
rhc connect -u <username> -p <password>

# Enable the CodeReady Builder repository for RHEL 9 for the current architecture
sudo subscription-manager repos --enable codeready-builder-for-rhel-9-$(arch)-rpms

# Install the EPEL repository for RHEL 9
sudo dnf install https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm

# This loop continuously checks for TCP connections in the SYN_SENT state every 2 seconds using netstat.
# It's useful for monitoring attempts to establish TCP connections from the local system to other hosts.
 while true;do sleep 2s && sudo netstat -napotep|grep SYN_SENT; done

